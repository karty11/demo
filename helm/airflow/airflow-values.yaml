# Airflow image
image:
  repository: apache/airflow
  tag: "2.9.0"
  pullPolicy: IfNotPresent

# Executor mode
executor: LocalExecutor

# Core Airflow config
airflow:
  config:
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
  connections:
    - id: mysql_conn
      type: mysql
      host: mysql.devproject.svc.cluster.local
      schema: bankappdb
      login: root
      password: "{{ conn.mysql_conn.password }}"  # handled by Secrets backend
      port: 3306
    - id: minio_conn
      type: s3
      extra: |
        {
          "aws_access_key_id": "minioadmin",
          "aws_secret_access_key": "minioadmin",
          "host": "http://minio.minio:9000",
          "region_name": "us-east-1"
        }

# Disable bundled Postgres, Redis, workers, triggerer
postgresql:
  enabled: false
redis:
  enabled: false
workers:
  replicas: 0
triggerer:
  replicas: 0

# External MySQL Database (bankappdb)
externalDatabase:
  type: mysql
  host: mysql.devproject.svc.cluster.local
  port: 3306
  user: root
  passwordSecret:
    name: bankapp-db-externalsecret   # secret must exist in airflow namespace
    key: password                     # key inside the secret
  database: bankappdb

# Logs (use EmptyDir)
logs:
  persistence:
    enabled: false

# Scheduler
scheduler:
  replicas: 1

# Webserver
webserver:
  replicas: 1
  service:
    type: ClusterIP
    externalPort: 8080   # what clients use
    internalPort: 8080   # containerPort inside pod

# DAGs from ConfigMap (optional)
dags:
  persistence:
    enabled: false
  gitSync:
    enabled: false

extraVolumes:
  - name: airflow-dags
    configMap:
      name: airflow-dags
extraVolumeMounts:
  - name: airflow-dags
    mountPath: /opt/airflow/dags
